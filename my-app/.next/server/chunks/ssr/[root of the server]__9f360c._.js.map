{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/_app.tsx"],"sourcesContent":["import { AppProps } from \"next/app\";\r\nimport \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen\">\r\n      <Component {...pageProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n"],"names":[],"mappings":";;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/transactions.tsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { useRouter } from \"next/router\";\r\n// import { Transaction } from \"../interfaces/InterfaceData\";\r\n\r\n// const Transactions = () => {\r\n//   const router = useRouter();\r\n//   const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n//   const [newTransaction, setNewTransaction] = useState<Transaction>({\r\n//     userId: \"\",\r\n//     type: \"income\",\r\n//     amount: 0,\r\n//     description: \"\",\r\n//     date: new Date().toISOString(),\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchTransactions = async () => {\r\n//       const userId = \"USER_ID\"; // Ganti dengan user ID yang sesuai\r\n//       try {\r\n//         const response = await fetch(`/api/transaction?userId=${userId}`);\r\n//         const data = await response.json();\r\n//         setTransactions(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching transactions:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTransactions();\r\n//   }, []);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const { name, value } = e.target;\r\n//     setNewTransaction((prev) => ({\r\n//       ...prev,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await fetch(\"/api/transaction\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(newTransaction),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const transaction = await response.json();\r\n//         setTransactions((prev) => [...prev, transaction]);\r\n//         setNewTransaction({\r\n//           userId: \"\",\r\n//           type: \"income\",\r\n//           amount: 0,\r\n//           description: \"\",\r\n//           date: new Date().toISOString(),\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error creating transaction:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       const response = await fetch(\"/api/transaction\", {\r\n//         method: \"DELETE\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ transactionId: id }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         setTransactions((prev) =>\r\n//           prev.filter((transaction) => transaction._id !== id)\r\n//         );\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting transaction:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (transaction: Transaction) => {\r\n//     setNewTransaction(transaction);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 className=\"text-3xl font-bold mb-4\">Manage Transactions</h2>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"mb-4\">\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"description\"\r\n//           placeholder=\"Description\"\r\n//           value={newTransaction.description}\r\n//           onChange={handleChange}\r\n//           required\r\n//           className=\"border p-2 mr-2\"\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           name=\"amount\"\r\n//           placeholder=\"Amount\"\r\n//           value={newTransaction.amount}\r\n//           onChange={handleChange}\r\n//           required\r\n//           className=\"border p-2 mr-2\"\r\n//         />\r\n//         <select\r\n//           name=\"type\"\r\n//           value={newTransaction.type}\r\n//           onChange={handleChange}\r\n//           className=\"border p-2 mr-2\"\r\n//         >\r\n//           <option value=\"income\">Income</option>\r\n//           <option value=\"expense\">Expense</option>\r\n//         </select>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"date\"\r\n//           value={newTransaction.date.split(\"T\")[0]}\r\n//           onChange={handleChange}\r\n//           required\r\n//           className=\"border p-2 mr-2\"\r\n//         />\r\n//         <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">\r\n//           Add Transaction\r\n//         </button>\r\n//       </form>\r\n\r\n//       <div className=\"transactions-list\">\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Transactions</h3>\r\n//         <table className=\"table-auto w-full\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th className=\"border p-2\">Type</th>\r\n//               <th className=\"border p-2\">Amount</th>\r\n//               <th className=\"border p-2\">Description</th>\r\n//               <th className=\"border p-2\">Date</th>\r\n//               <th className=\"border p-2\">Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {transactions.map((transaction) => (\r\n//               <tr key={transaction._id}>\r\n//                 <td className=\"border p-2\">{transaction.type}</td>\r\n//                 <td className=\"border p-2\">{transaction.amount}</td>\r\n//                 <td className=\"border p-2\">{transaction.description}</td>\r\n//                 <td className=\"border p-2\">\r\n//                   {new Date(transaction.date).toLocaleDateString()}\r\n//                 </td>\r\n//                 <td className=\"border p-2\">\r\n//                   <button\r\n//                     onClick={() => handleEdit(transaction)}\r\n//                     className=\"bg-yellow-500 text-white p-1 rounded mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleDelete(transaction._id)}\r\n//                     className=\"bg-red-500 text-white p-1 rounded\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Transactions;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}