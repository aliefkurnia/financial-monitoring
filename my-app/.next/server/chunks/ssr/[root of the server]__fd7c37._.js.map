{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/frontend/my-app/src/components/expenseChart.tsx"],"sourcesContent":["import { PieChart } from \"react-minimal-pie-chart\";\r\n\r\ntype Expense = {\r\n  category: string;\r\n  amount: number;\r\n  color: string;\r\n};\r\n\r\ntype ExpenseChartProps = {\r\n  expenses: Expense[];\r\n};\r\n\r\nconst ExpenseChart: React.FC<ExpenseChartProps> = ({ expenses }) => {\r\n  const chartData = expenses.map((expense) => ({\r\n    title: expense.category,\r\n    value: expense.amount,\r\n    color: expense.color,\r\n  }));\r\n\r\n  return <PieChart data={chartData} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAYA,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IAC7D,MAAM,YAAY,SAAS,GAAG,CAAC,CAAC,UAAY,CAAC;YAC3C,OAAO,QAAQ,QAAQ;YACvB,OAAO,QAAQ,MAAM;YACrB,OAAO,QAAQ,KAAK;QACtB,CAAC;IAED,qBAAO,qKAAC,yJAAA,CAAA,WAAQ;QAAC,MAAM;;;;;;AACzB;uCAEe"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/frontend/my-app/src/pages/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ExpenseChart from \"../components/expenseChart\";\nimport { fetchTransactions } from \"../api/transactions\"; // Pastikan path yang benar\n\n// Definisikan tipe untuk Transaction\ninterface Transaction {\n  amount: number;\n  category: string;\n  date: string;\n  type: \"income\" | \"expense\";\n}\n\nconst Index = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]); // Menambahkan tipe untuk state\n\n  useEffect(() => {\n    const getTransactions = async () => {\n      try {\n        const data = await fetchTransactions(); // Ambil data dari API\n        setTransactions(data); // Set data pada state\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n\n    getTransactions();\n  }, []);\n\n  // Filter transaksi dengan tipe \"expense\"\n  const expenses = transactions.filter((t) => t.type === \"expense\");\n\n  return (\n    <div>\n      <h1>Personal Finance Monitor</h1>\n      <ExpenseChart expenses={expenses} />{\" \"}\n      {/* Pass data expenses ke komponen ExpenseChart */}\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;;AAWA,MAAM,QAAQ;IACZ,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE,GAAG,+BAA+B;IAEpG,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,IAAI;gBACF,MAAM,OAAO,MAAM,qBAAqB,sBAAsB;gBAC9D,gBAAgB,OAAO,sBAAsB;YAC/C,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;YAChD;QACF;QAEA;IACF,GAAG,EAAE;IAEL,yCAAyC;IACzC,MAAM,WAAW,aAAa,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAEvD,qBACE,qKAAC;;0BACC,qKAAC;0BAAG;;;;;;0BACJ,qKAAC,2HAAA,CAAA,UAAY;gBAAC,UAAU;;;;;;YAAa;;;;;;;AAI3C;uCAEe"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}