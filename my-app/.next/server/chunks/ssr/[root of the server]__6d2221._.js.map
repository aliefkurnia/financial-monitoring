{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/_app.tsx"],"sourcesContent":["import { AppProps } from \"next/app\";\r\nimport \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen\">\r\n      <Component {...pageProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n"],"names":[],"mappings":";;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/dashboard.tsx"],"sourcesContent":["const Dashboard = () => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [totalExpense, setTotalExpense] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const savings = 500;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const userId = sessionStorage.getItem(\"userId\");\r\n\r\n        if (!userId) {\r\n          setError(\"User ID is missing in session storage\");\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(`/api/transaction?userId=${userId}`);\r\n        console.log(response);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Gagal memuat data transaksi\");\r\n        }\r\n\r\n        const data: Transaction[] = await response.json();\r\n        setTransactions(data);\r\n\r\n        // Calculate total income and expense only if data is not empty\r\n        if (data.length > 0) {\r\n          const income = data\r\n            .filter((transaction) => transaction.type === \"income\")\r\n            .reduce((acc, curr) => acc + curr.amount, 0);\r\n          const expense = data\r\n            .filter((transaction) => transaction.type === \"expense\")\r\n            .reduce((acc, curr) => acc + curr.amount, 0);\r\n          setTotalIncome(income);\r\n          setTotalExpense(expense);\r\n        }\r\n      } catch (error) {\r\n        setError(\"Gagal memuat data!\");\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Runs only once when the component mounts\r\n\r\n  // Handle Add Transaction\r\n  const handleAddTransaction = async (\r\n    newTransaction: Omit<Transaction, \"userId\" | \"transactionId\">\r\n  ) => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    if (!userId) {\r\n      console.error(\"User ID is missing in session storage\");\r\n      return;\r\n    }\r\n\r\n    const transactionWithUserId: Omit<Transaction, \"transactionId\"> = {\r\n      ...newTransaction,\r\n      userId, // Add userId to the transaction\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/api/transaction\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(transactionWithUserId),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Gagal menambahkan transaksi\");\r\n      }\r\n\r\n      const addedTransaction: Transaction = await response.json();\r\n\r\n      // Add the new transaction to the state\r\n      setTransactions((prevTransactions) => {\r\n        const updatedTransactions = [...prevTransactions, addedTransaction];\r\n        console.log(\"Updated Transactions:\", updatedTransactions); // Debugging line\r\n        return updatedTransactions;\r\n      });\r\n\r\n      // Recalculate total income and expense\r\n      setTotalIncome(\r\n        (prevIncome) =>\r\n          prevIncome +\r\n          (addedTransaction.type === \"income\" ? addedTransaction.amount : 0)\r\n      );\r\n      setTotalExpense(\r\n        (prevExpense) =>\r\n          prevExpense +\r\n          (addedTransaction.type === \"expense\" ? addedTransaction.amount : 0)\r\n      );\r\n\r\n      console.log(\"Transaction successfully added:\", addedTransaction);\r\n    } catch (error) {\r\n      console.error(\"Error adding transaction:\", error);\r\n      setError(\"Terjadi kesalahan saat menambahkan transaksi\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"text-red-500\">{error}</p>;\r\n  }\r\n\r\n  // Ensure CombinedChart and LastSummary handle empty data\r\n  const incomeData = transactions.filter((t) => t.type === \"income\");\r\n  const expenseData = transactions.filter((t) => t.type === \"expense\");\r\n\r\n  if (transactions.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <p>No transactions found. Please add some transactions.</p>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n        <h3 className=\"text-2xl font-semibold mb-4\">\r\n          Grafik Pemasukan dan Pengeluaran\r\n        </h3>\r\n        <CombinedChart incomeData={incomeData} expenseData={expenseData} />\r\n      </div>\r\n\r\n      {/* Last Summary */}\r\n      <div className=\"mb-8\">\r\n        <LastSummary transactions={transactions} />\r\n      </div>\r\n\r\n      {/* Add Transaction Form */}\r\n      <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n        <AddTransactionForm onAddTransaction={handleAddTransaction} />\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n        <h3 className=\"text-2xl font-semibold mb-4\">Prediksi Tabungan</h3>\r\n        <SavingsPrediction savings={savings} />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}