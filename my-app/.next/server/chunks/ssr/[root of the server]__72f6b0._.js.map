{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/_app.tsx"],"sourcesContent":["import { AppProps } from \"next/app\";\r\nimport \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen\">\r\n      <Component {...pageProps} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyApp;\r\n"],"names":[],"mappings":";;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/transactions.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Transaction } from \"../interfaces/InterfaceData\";\r\n\r\nconst Transactions = () => {\r\n  const router = useRouter();\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [newTransaction, setNewTransaction] = useState<Transaction>({\r\n    _id: \"\",\r\n    userId: \"\",\r\n    type: \"income\",\r\n    amount: 0,\r\n    description: \"\",\r\n    date: new Date(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      const userId = \"USER_ID\"; // Replace with actual user ID\r\n      try {\r\n        const response = await fetch(`/api/transaction?userId=${userId}`);\r\n        const data = await response.json();\r\n\r\n        // Ensure the data is an array\r\n        if (Array.isArray(data)) {\r\n          setTransactions(data);\r\n        } else {\r\n          console.error(\"Received data is not an array\", data);\r\n          setTransactions([]); // Fallback to empty array\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n        setTransactions([]); // Fallback to empty array on error\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setNewTransaction((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"/api/transaction\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newTransaction),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const transaction = await response.json();\r\n        setTransactions((prev) => [...prev, transaction]);\r\n        setNewTransaction({\r\n          _id: \"\",\r\n          userId: \"\",\r\n          type: \"income\",\r\n          amount: 0,\r\n          description: \"\",\r\n          date: new Date(),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating transaction:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      const response = await fetch(\"/api/transaction\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ transactionId: id }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTransactions((prev) =>\r\n          prev.filter((transaction) => transaction._id !== id)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting transaction:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (transaction: Transaction) => {\r\n    setNewTransaction(transaction);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-3xl font-bold mb-4\">Manage Transactions</h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={newTransaction.description}\r\n          onChange={handleChange}\r\n          required\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          placeholder=\"Amount\"\r\n          value={newTransaction.amount}\r\n          onChange={handleChange}\r\n          required\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <select\r\n          name=\"type\"\r\n          value={newTransaction.type}\r\n          onChange={handleChange}\r\n          className=\"border p-2 mr-2\"\r\n        >\r\n          <option value=\"income\">Income</option>\r\n          <option value=\"expense\">Expense</option>\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={\r\n            newTransaction.date\r\n              ? new Date(newTransaction.date).toISOString().split(\"T\")[0]\r\n              : \"\"\r\n          }\r\n          onChange={handleChange}\r\n          required\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">\r\n          Add Transaction\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"transactions-list\">\r\n        <h3 className=\"text-xl font-semibold mb-4\">Transactions</h3>\r\n        <table className=\"table-auto w-full\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border p-2\">Type</th>\r\n              <th className=\"border p-2\">Amount</th>\r\n              <th className=\"border p-2\">Description</th>\r\n              <th className=\"border p-2\">Date</th>\r\n              <th className=\"border p-2\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction) => (\r\n              <tr key={transaction._id}>\r\n                <td className=\"border p-2\">{transaction.type}</td>\r\n                <td className=\"border p-2\">{transaction.amount}</td>\r\n                <td className=\"border p-2\">{transaction.description}</td>\r\n                <td className=\"border p-2\">\r\n                  {new Date(transaction.date).toLocaleDateString()}\r\n                </td>\r\n                <td className=\"border p-2\">\r\n                  <button\r\n                    onClick={() => handleEdit(transaction)}\r\n                    className=\"bg-yellow-500 text-white p-1 rounded mr-2\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(transaction._id)}\r\n                    className=\"bg-red-500 text-white p-1 rounded\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}