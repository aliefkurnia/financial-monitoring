{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst connectToDatabase = async () => {\r\n  if (mongoose.connections[0].readyState) {\r\n    console.log(\"Already connected to MongoDB\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await mongoose.connect(process.env.MONGODB_URI as string);\r\n    console.log(\"MongoDB connected successfully\");\r\n  } catch (error) {\r\n    console.error(\"MongoDB connection error:\", error);\r\n    throw new Error(\"Failed to connect to MongoDB\");\r\n  }\r\n};\r\n\r\nexport default connectToDatabase;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;IACxB,IAAI,yGAAA,CAAA,UAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE;QACtC,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IAClB;AACF;uCAEe"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/models/TransactionModel.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst TransactionSchema = new mongoose.Schema(\r\n  {\r\n    userId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: [\"income\", \"expense\"],\r\n      required: true,\r\n    },\r\n    amount: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n      minlength: 3,\r\n    },\r\n    date: {\r\n      type: Date,\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nTransactionSchema.index({ userId: 1, date: -1 });\r\n\r\nconst Transaction =\r\n  mongoose.models.Transaction ||\r\n  mongoose.model(\"Transaction\", TransactionSchema);\r\n\r\nexport default Transaction;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC3C;IACE,QAAQ;QACN,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAU;SAAU;QAC3B,UAAU;IACZ;IACA,QAAQ;QACN,MAAM;QACN,UAAU;QACV,KAAK;IACP;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,WAAW;IACb;IACA,MAAM;QACJ,MAAM;QACN,UAAU;IACZ;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,kBAAkB,KAAK,CAAC;IAAE,QAAQ;IAAG,MAAM,CAAC;AAAE;AAE9C,MAAM,cACJ,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAC3B,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe;uCAEjB"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/api/transaction.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport dbConnect from \"../../lib/mongodb\";\r\nimport Transaction from \"../../models/TransactionModel\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport default async function handler(\r\n  req: NextApiRequest,\r\n  res: NextApiResponse\r\n) {\r\n  // Connect to the MongoDB database\r\n  await dbConnect();\r\n\r\n  switch (req.method) {\r\n    case \"GET\":\r\n      // Extract userId from query parameters\r\n      const userId = req.query.userId as string;\r\n\r\n      // Validate if userId is a valid ObjectId\r\n      if (!userId || !Types.ObjectId.isValid(userId)) {\r\n        return res.status(400).json({ message: \"Invalid User ID\" });\r\n      }\r\n\r\n      try {\r\n        // Query the database for transactions that match the userId\r\n        const transactions = await Transaction.find({\r\n          userId: new Types.ObjectId(userId),\r\n        });\r\n\r\n        // Return the transactions as a response\r\n        res.status(200).json(transactions);\r\n      } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({\r\n          message: \"Terjadi kesalahan saat mengambil data transaksi\",\r\n        });\r\n      }\r\n      break;\r\n\r\n    case \"POST\":\r\n      // Destructure required fields from the request body\r\n      const { userId: postUserId, type, amount, description, date } = req.body;\r\n\r\n      // Check if all required fields are provided\r\n      if (!postUserId || !type || !amount || !description || !date) {\r\n        return res.status(400).json({ message: \"Semua field harus diisi\" });\r\n      }\r\n\r\n      // Validate if postUserId is a valid ObjectId\r\n      if (!Types.ObjectId.isValid(postUserId)) {\r\n        return res.status(400).json({ message: \"Invalid User ID\" });\r\n      }\r\n\r\n      try {\r\n        // Create a new transaction instance\r\n        const newTransaction = new Transaction({\r\n          userId: new Types.ObjectId(postUserId),\r\n          type,\r\n          amount,\r\n          description,\r\n          date: new Date(date),\r\n        });\r\n\r\n        // Save the new transaction to the database\r\n        await newTransaction.save();\r\n\r\n        // Return the created transaction as the response\r\n        res.status(201).json(newTransaction);\r\n      } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({\r\n          message: \"Terjadi kesalahan saat menambahkan transaksi\",\r\n        });\r\n      }\r\n      break;\r\n\r\n    case \"DELETE\":\r\n      // Extract transactionId from the request body\r\n      const { transactionId } = req.body;\r\n\r\n      // Check if transactionId is provided\r\n      if (!transactionId) {\r\n        return res\r\n          .status(400)\r\n          .json({ message: \"Transaction ID harus disertakan\" });\r\n      }\r\n\r\n      try {\r\n        // Delete the transaction by its ID\r\n        const deletedTransaction = await Transaction.findByIdAndDelete(\r\n          transactionId\r\n        );\r\n\r\n        // Check if the transaction exists before trying to delete\r\n        if (!deletedTransaction) {\r\n          return res.status(404).json({ message: \"Transaksi tidak ditemukan\" });\r\n        }\r\n\r\n        // Return a success message\r\n        res.status(200).json({ message: \"Transaksi berhasil dihapus\" });\r\n      } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({\r\n          message: \"Terjadi kesalahan saat menghapus transaksi\",\r\n        });\r\n      }\r\n      break;\r\n\r\n    default:\r\n      // Handle unsupported HTTP methods\r\n      res.setHeader(\"Allow\", [\"GET\", \"POST\", \"DELETE\"]);\r\n      res.status(405).json({ message: `Metode ${req.method} tidak diizinkan` });\r\n      break;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEe,eAAe,QAC5B,GAAmB,EACnB,GAAoB;IAEpB,kCAAkC;IAClC,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IAEd,OAAQ,IAAI,MAAM;QAChB,KAAK;YACH,uCAAuC;YACvC,MAAM,SAAS,IAAI,KAAK,CAAC,MAAM;YAE/B,yCAAyC;YACzC,IAAI,CAAC,UAAU,CAAC,yGAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS;gBAC9C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAkB;YAC3D;YAEA,IAAI;gBACF,4DAA4D;gBAC5D,MAAM,eAAe,MAAM,0HAAA,CAAA,UAAW,CAAC,IAAI,CAAC;oBAC1C,QAAQ,IAAI,yGAAA,CAAA,QAAK,CAAC,QAAQ,CAAC;gBAC7B;gBAEA,wCAAwC;gBACxC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACvB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBACnB,SAAS;gBACX;YACF;YACA;QAEF,KAAK;YACH,oDAAoD;YACpD,MAAM,EAAE,QAAQ,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;YAExE,4CAA4C;YAC5C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM;gBAC5D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAA0B;YACnE;YAEA,6CAA6C;YAC7C,IAAI,CAAC,yGAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa;gBACvC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAkB;YAC3D;YAEA,IAAI;gBACF,oCAAoC;gBACpC,MAAM,iBAAiB,IAAI,0HAAA,CAAA,UAAW,CAAC;oBACrC,QAAQ,IAAI,yGAAA,CAAA,QAAK,CAAC,QAAQ,CAAC;oBAC3B;oBACA;oBACA;oBACA,MAAM,IAAI,KAAK;gBACjB;gBAEA,2CAA2C;gBAC3C,MAAM,eAAe,IAAI;gBAEzB,iDAAiD;gBACjD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACvB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBACnB,SAAS;gBACX;YACF;YACA;QAEF,KAAK;YACH,8CAA8C;YAC9C,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,IAAI;YAElC,qCAAqC;YACrC,IAAI,CAAC,eAAe;gBAClB,OAAO,IACJ,MAAM,CAAC,KACP,IAAI,CAAC;oBAAE,SAAS;gBAAkC;YACvD;YAEA,IAAI;gBACF,mCAAmC;gBACnC,MAAM,qBAAqB,MAAM,0HAAA,CAAA,UAAW,CAAC,iBAAiB,CAC5D;gBAGF,0DAA0D;gBAC1D,IAAI,CAAC,oBAAoB;oBACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;wBAAE,SAAS;oBAA4B;gBACrE;gBAEA,2BAA2B;gBAC3B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAA6B;YAC/D,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;gBACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBACnB,SAAS;gBACX;YACF;YACA;QAEF;YACE,kCAAkC;YAClC,IAAI,SAAS,CAAC,SAAS;gBAAC;gBAAO;gBAAQ;aAAS;YAChD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS,CAAC,OAAO,EAAE,IAAI,MAAM,CAAC,gBAAgB,CAAC;YAAC;YACvE;IACJ;AACF"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,6HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,6HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}