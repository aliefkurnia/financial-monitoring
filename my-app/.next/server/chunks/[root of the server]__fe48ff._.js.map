{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/src/pages/api/transaction.ts"],"sourcesContent":["export default async function handler(\r\n  req: NextApiRequest,\r\n  res: NextApiResponse\r\n) {\r\n  await dbConnect();\r\n\r\n  console.log(\"Request method:\", req.method);\r\n  console.log(\"Request body:\", req.body);\r\n  console.log(\"Request query:\", req.query);\r\n\r\n  switch (req.method) {\r\n    case \"POST\":\r\n      const { userId, type, amount, description, date } = req.body;\r\n\r\n      if (!userId || !type || !amount || !description || !date) {\r\n        return res.status(400).json({ message: \"Semua field harus diisi\" });\r\n      }\r\n\r\n      if (!Types.ObjectId.isValid(userId)) {\r\n        return res.status(400).json({ message: \"Invalid User ID\" });\r\n      }\r\n\r\n      if (isNaN(amount) || amount <= 0) {\r\n        return res\r\n          .status(400)\r\n          .json({ message: \"Amount must be a positive number\" });\r\n      }\r\n\r\n      const parsedDate = new Date(date);\r\n      if (isNaN(parsedDate.getTime())) {\r\n        return res.status(400).json({ message: \"Invalid date format\" });\r\n      }\r\n\r\n      try {\r\n        const newTransaction = new Transaction({\r\n          userId: new Types.ObjectId(userId),\r\n          type,\r\n          amount,\r\n          description,\r\n          date: parsedDate,\r\n        });\r\n\r\n        await newTransaction.save();\r\n\r\n        const user = await User.findById(userId);\r\n        if (!user) {\r\n          return res.status(404).json({ message: \"User not found\" });\r\n        }\r\n\r\n        user.transactions.push(newTransaction._id);\r\n        await user.save();\r\n\r\n        res.status(201).json(newTransaction);\r\n      } catch (error) {\r\n        console.error(\"Error creating transaction:\", error);\r\n        res\r\n          .status(500)\r\n          .json({ message: \"Terjadi kesalahan saat menambahkan transaksi\" });\r\n      }\r\n      break;\r\n\r\n    case \"GET\":\r\n      const {\r\n        userId: queryUserId,\r\n        type: transactionType,\r\n        lastSummary,\r\n      } = req.query;\r\n\r\n      if (!queryUserId || !Types.ObjectId.isValid(queryUserId as string)) {\r\n        return res.status(400).json({ message: \"Invalid or missing userId\" });\r\n      }\r\n\r\n      try {\r\n        if (lastSummary === \"true\") {\r\n          const lastTransactions = await Transaction.find({\r\n            userId: queryUserId,\r\n          })\r\n            .sort({ date: -1 })\r\n            .limit(5);\r\n          return res.status(200).json(lastTransactions);\r\n        }\r\n\r\n        const filter: any = {\r\n          userId: new Types.ObjectId(queryUserId as string),\r\n        };\r\n\r\n        if (\r\n          transactionType &&\r\n          (transactionType === \"income\" || transactionType === \"expense\")\r\n        ) {\r\n          filter.type = transactionType;\r\n        }\r\n\r\n        const transactions = await Transaction.find(filter);\r\n\r\n        if (transactions.length === 0) {\r\n          return res.status(404).json({ message: \"No transactions found\" });\r\n        }\r\n\r\n        res.status(200).json(transactions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n        res\r\n          .status(500)\r\n          .json({ message: \"Terjadi kesalahan saat mengambil transaksi\" });\r\n      }\r\n      break;\r\n\r\n    default:\r\n      res.setHeader(\"Allow\", [\"POST\", \"GET\"]);\r\n      res.status(405).json({ message: `Method ${req.method} Not Allowed` });\r\n      break;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://C%3A/alip/financial-monitor/my-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,6HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,6HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}